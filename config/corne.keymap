/*
 * Copyright (c) 2021 The ZMK Contributors
 * #include <dt-bindings/zmk/pointing.h>
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/trackball_pim447.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        tb_mode: trackball_mode {
            compatible = "zmk,behavior-trackball-mode";
            #binding-cells = <1>;
            
            default-mode = <0>;    /* 0=move, 1=scroll */
            
            /* Optional LED colors for each mode (see trackball_pim447.h) */
            led-mode-move = <2>;   /* Green (LED_GREEN) */
            led-mode-scroll = <3>; /* Blue (LED_BLUE) */
        };
    };
};
/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp CAPSLOCK    &kp Q  &kp W  &kp E     &kp R   &kp T        &kp Y    &kp U   &kp I                &kp O    &kp P     &kp BACKSPACE
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F   &kp G        &kp H    &kp J   &kp K                &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V   &kp B        &kp N    &kp M   &kp COMMA            &kp DOT  &kp FSLH  &kp ESC
                              &kp LGUI  &tog 1  &kp SPACE    &kp RET  &tog 2  &mt RIGHT_ALT RCTRL
            >;
        };

        lower_layer {
            bindings = <
&kp F1     &kp F2          &kp F3   &kp F4        &kp F5            &kp F6               &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &kp SLASH  &kp ASTERISK  &kp MINUS
&kp F7     &kp F8          &kp F9   &kp F10       &kp F11           &kp F10              &kp NUMBER_4  &kp N5        &kp NUMBER_6   &kp BSLH   &kp EQUAL     &kp PLUS
&kp LCTRL  &kp LEFT_SHIFT  &kp TAB  &kp GRAVE     &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp DOT    &kp DELETE    &kp ENTER
                                    &kp LEFT_ALT  &trans            &kp BSLH             &kp NUMBER_0  &trans        &kp BACKSPACE
            >;
        };

        raise_layer {
            bindings = <
&trans  &trans          &kp UP_ARROW       &kp PRINTSCREEN  &kp SCROLLLOCK  &kp K_PP          &bt BT_SEL 0       &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW     &kp RIGHT_ARROW  &kp K_PREV      &kp K_NEXT        &kp PRINTSCREEN    &kp SCROLLLOCK  &kp PAUSE_BREAK  &trans        &trans        &kp PAGE_UP
&trans  &kp K_MUTE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp END         &kp K_PREVIOUS    &kp INS            &kp HOME        &kp DELETE       &kp END       &trans        &kp PAGE_DOWN
                                           &trans           &trans          &trans            &ext_power EP_OFF  &trans          &out OUT_TOG
            >;
        };

        layer_3 {
            bindings = <
&trans  &rgb_ug RGB_TOG                 &rgb_ug RGB_HUI                   &rgb_ug RGB_HUD                  &rgb_ug RGB_SAI                   &rgb_ug RGB_SAD                     &mkp LCLK       &pim447_scroll_move  &mkp RCLK  &mkp MB1  &mkp MB2  &trans
&trans  &rgb_ug RGB_BRI                 &rgb_ug RGB_BRD                   &rgb_ug RGB_SPI                  &rgb_ug RGB_SPD                   &rgb_ug RGB_EFF                     &pim447_toggle  &mkp MCLK            &mkp MB3   &mkp MB4  &mkp MB5  &trans
&trans  &rgb_ug RGB_COLOR_HSB(0,93,49)  &rgb_ug RGB_COLOR_HSB(245,91,50)  &rgb_ug RGB_COLOR_HSB(60,97,53)  &rgb_ug RGB_COLOR_HSB(119,92,52)  &rgb_ug RGB_COLOR_HSB(301,88,49)    &mkp MCLK       &trans               &trans     &trans    &trans    &trans
                                                                          &mkp LCLK                        &trans                            &mkp RCLK                           &mkp LCLK       &trans               &mkp RCLK
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        trackball {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
